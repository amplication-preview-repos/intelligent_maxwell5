/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsInt,
  Min,
  Max,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { EnumUserProfileGender } from "./EnumUserProfileGender";
import { ConversationUpdateManyWithoutUserProfilesInput } from "./ConversationUpdateManyWithoutUserProfilesInput";
import { Type } from "class-transformer";
import { MentalHealthAssessmentUpdateManyWithoutUserProfilesInput } from "./MentalHealthAssessmentUpdateManyWithoutUserProfilesInput";
import { ReferralUpdateManyWithoutUserProfilesInput } from "./ReferralUpdateManyWithoutUserProfilesInput";
import { SessionUpdateManyWithoutUserProfilesInput } from "./SessionUpdateManyWithoutUserProfilesInput";

@InputType()
class UserProfileUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  age?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumUserProfileGender,
  })
  @IsEnum(EnumUserProfileGender)
  @IsOptional()
  @Field(() => EnumUserProfileGender, {
    nullable: true,
  })
  gender?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => ConversationUpdateManyWithoutUserProfilesInput,
  })
  @ValidateNested()
  @Type(() => ConversationUpdateManyWithoutUserProfilesInput)
  @IsOptional()
  @Field(() => ConversationUpdateManyWithoutUserProfilesInput, {
    nullable: true,
  })
  conversations?: ConversationUpdateManyWithoutUserProfilesInput;

  @ApiProperty({
    required: false,
    type: () => MentalHealthAssessmentUpdateManyWithoutUserProfilesInput,
  })
  @ValidateNested()
  @Type(() => MentalHealthAssessmentUpdateManyWithoutUserProfilesInput)
  @IsOptional()
  @Field(() => MentalHealthAssessmentUpdateManyWithoutUserProfilesInput, {
    nullable: true,
  })
  mentalHealthAssessments?: MentalHealthAssessmentUpdateManyWithoutUserProfilesInput;

  @ApiProperty({
    required: false,
    type: () => ReferralUpdateManyWithoutUserProfilesInput,
  })
  @ValidateNested()
  @Type(() => ReferralUpdateManyWithoutUserProfilesInput)
  @IsOptional()
  @Field(() => ReferralUpdateManyWithoutUserProfilesInput, {
    nullable: true,
  })
  referrals?: ReferralUpdateManyWithoutUserProfilesInput;

  @ApiProperty({
    required: false,
    type: () => SessionUpdateManyWithoutUserProfilesInput,
  })
  @ValidateNested()
  @Type(() => SessionUpdateManyWithoutUserProfilesInput)
  @IsOptional()
  @Field(() => SessionUpdateManyWithoutUserProfilesInput, {
    nullable: true,
  })
  sessions?: SessionUpdateManyWithoutUserProfilesInput;
}

export { UserProfileUpdateInput as UserProfileUpdateInput };
