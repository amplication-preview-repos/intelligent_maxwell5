/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsInt,
  Min,
  Max,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { EnumUserProfileGender } from "./EnumUserProfileGender";
import { ConversationCreateNestedManyWithoutUserProfilesInput } from "./ConversationCreateNestedManyWithoutUserProfilesInput";
import { Type } from "class-transformer";
import { MentalHealthAssessmentCreateNestedManyWithoutUserProfilesInput } from "./MentalHealthAssessmentCreateNestedManyWithoutUserProfilesInput";
import { ReferralCreateNestedManyWithoutUserProfilesInput } from "./ReferralCreateNestedManyWithoutUserProfilesInput";
import { SessionCreateNestedManyWithoutUserProfilesInput } from "./SessionCreateNestedManyWithoutUserProfilesInput";

@InputType()
class UserProfileCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  age?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumUserProfileGender,
  })
  @IsEnum(EnumUserProfileGender)
  @IsOptional()
  @Field(() => EnumUserProfileGender, {
    nullable: true,
  })
  gender?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => ConversationCreateNestedManyWithoutUserProfilesInput,
  })
  @ValidateNested()
  @Type(() => ConversationCreateNestedManyWithoutUserProfilesInput)
  @IsOptional()
  @Field(() => ConversationCreateNestedManyWithoutUserProfilesInput, {
    nullable: true,
  })
  conversations?: ConversationCreateNestedManyWithoutUserProfilesInput;

  @ApiProperty({
    required: false,
    type: () => MentalHealthAssessmentCreateNestedManyWithoutUserProfilesInput,
  })
  @ValidateNested()
  @Type(() => MentalHealthAssessmentCreateNestedManyWithoutUserProfilesInput)
  @IsOptional()
  @Field(() => MentalHealthAssessmentCreateNestedManyWithoutUserProfilesInput, {
    nullable: true,
  })
  mentalHealthAssessments?: MentalHealthAssessmentCreateNestedManyWithoutUserProfilesInput;

  @ApiProperty({
    required: false,
    type: () => ReferralCreateNestedManyWithoutUserProfilesInput,
  })
  @ValidateNested()
  @Type(() => ReferralCreateNestedManyWithoutUserProfilesInput)
  @IsOptional()
  @Field(() => ReferralCreateNestedManyWithoutUserProfilesInput, {
    nullable: true,
  })
  referrals?: ReferralCreateNestedManyWithoutUserProfilesInput;

  @ApiProperty({
    required: false,
    type: () => SessionCreateNestedManyWithoutUserProfilesInput,
  })
  @ValidateNested()
  @Type(() => SessionCreateNestedManyWithoutUserProfilesInput)
  @IsOptional()
  @Field(() => SessionCreateNestedManyWithoutUserProfilesInput, {
    nullable: true,
  })
  sessions?: SessionCreateNestedManyWithoutUserProfilesInput;
}

export { UserProfileCreateInput as UserProfileCreateInput };
